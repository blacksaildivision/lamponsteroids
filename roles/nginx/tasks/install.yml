# Install required packages for compiling nginx from source
#
- name: Install required packages for compiling nginx
  dnf:
    name: [gcc, gcc-c++, git]
    state: latest
  tags: [nginx]



# Download and unpack sources for nginx, PCRE, OpenSSL, Zlib and Brotli
# Source code will be downloaded from following pages:
# nginx -> https://nginx.org/en/download.html
# PCRE -> https://ftp.pcre.org/pub/pcre/
# OpenSSL -> https://github.com/openssl/openssl/releases
# Zlib -> https://www.zlib.net
# Brotli -> https://github.com/google/ngx_brotli
#
- name: Download source code packages
  get_url:
    dest: "{{ nginx_sources_path }}"
    url: "{{ item }}"
  with_items:
    - "https://nginx.org/download/nginx-{{ nginx_version }}.tar.gz"
    - "https://ftp.pcre.org/pub/pcre/pcre-{{ nginx_pcre_version }}.tar.gz"
    - "https://github.com/openssl/openssl/archive/OpenSSL_{{ nginx_openssl_version | replace( '.', '_' ) }}.tar.gz"
    - "https://www.zlib.net/zlib-{{ nginx_zlib_version }}.tar.gz"
  tags: [nginx]

- name: Unpack downloaded nginx source code
  unarchive:
    src: "{{ nginx_sources_path }}/nginx-{{ nginx_version }}.tar.gz"
    dest: "{{ nginx_sources_path }}"
    owner: "{{ nginx_build_user }}"
    group: "{{ nginx_build_group }}"
    copy: no
    creates: "{{ nginx_sources_path }}/nginx-{{ nginx_version }}"
  tags: [nginx]

- name: Unpack downloaded PCRE source code
  unarchive:
    src: "{{ nginx_sources_path }}/pcre-{{ nginx_pcre_version }}.tar.gz"
    dest: "{{ nginx_sources_path }}"
    owner: "{{ nginx_build_user }}"
    group: "{{ nginx_build_group }}"
    copy: no
    creates: "{{ nginx_sources_path }}/pcre-{{ nginx_pcre_version }}"
  tags: [nginx]

- name: Unpack downloaded OpenSSL sources
  unarchive:
    src: "{{ nginx_sources_path }}/openssl-OpenSSL_{{ nginx_openssl_version | replace( '.', '_' ) }}.tar.gz"
    dest: "{{ nginx_sources_path }}"
    owner: "{{ nginx_build_user }}"
    group: "{{ nginx_build_user }}"
    copy: no
    creates: "{{ nginx_sources_path }}/openssl-OpenSSL_{{ nginx_openssl_version | replace( '.', '_' ) }}"
  tags: [nginx]

- name: Unpack downloaded Zlib sources
  unarchive:
    src: "{{ nginx_sources_path }}/zlib-{{ nginx_zlib_version }}.tar.gz"
    dest: "{{ nginx_sources_path }}"
    owner: "{{ nginx_build_user }}"
    group: "{{ nginx_build_user }}"
    copy: no
    creates: "{{ nginx_sources_path }}/zlib-{{ nginx_zlib_version }}"
  tags: [nginx]

- name: Clone Brotli repository
  git:
    repo: https://github.com/google/ngx_brotli.git
    dest: "{{ nginx_sources_path }}/ngx_brotli"
  tags: [nginx]



# Compile and install nginx
# It will be compiled by using different user than root.
# Install operation must be executed as sudo user
#
- name: Compile nginx
  command: "{{ item }}"
  args:
    chdir: "{{ nginx_sources_path }}/nginx-{{ nginx_version }}"
  with_items:
    - "./configure {{ nginx_configure_options | join(' ') }}"
    - make
  become: true
  become_user: "{{ nginx_build_user }}"
  tags: [nginx]

- name: Install compiled nginx
  command: make install
  args:
    chdir: "{{ nginx_sources_path }}/nginx-{{ nginx_version }}"
  tags: [nginx]



# Remove downloaded sources after installation
#
- name: Cleanup downloaded sources
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ nginx_sources_path }}/nginx-{{ nginx_version }}.tar.gz"
    - "{{ nginx_sources_path }}/nginx-{{ nginx_version }}"
    - "{{ nginx_sources_path }}/pcre-{{ nginx_pcre_version }}.tar.gz"
    - "{{ nginx_sources_path }}/pcre-{{ nginx_pcre_version }}"
    - "{{ nginx_sources_path }}/openssl-OpenSSL_{{ nginx_openssl_version | replace( '.', '_' ) }}.tar.gz"
    - "{{ nginx_sources_path }}/openssl-OpenSSL_{{ nginx_openssl_version | replace( '.', '_' ) }}"
    - "{{ nginx_sources_path }}/zlib-{{ nginx_zlib_version }}.tar.gz"
    - "{{ nginx_sources_path }}/zlib-{{ nginx_zlib_version }}"
    - "{{ nginx_sources_path }}/ngx_brotli"
  tags: [nginx]



# Add nginx executables to PATH
#
- name: Add nginx executables to PATH
  template:
    src: nginx.sh.j2
    dest: /etc/profile.d/nginx.sh
    owner: root
    group: root
    mode: 0644
  tags: [nginx]



# Create nginx Systemctl entry
# It will allow nginx to be manage by systemctl (ie. sudo systemctl start nginx).
#
- name: Add systemd entry for nginx
  template:
    src: nginx.service.j2
    dest: /etc/systemd/system/nginx.service
    owner: root
    group: root
    mode: 0644
  tags: [nginx]
