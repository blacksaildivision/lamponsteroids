# Install MySQL RPM from remote repository
#
- name: Import RPM key
  ansible.builtin.rpm_key:
    key: https://repo.mysql.com/RPM-GPG-KEY-mysql-2023
    state: present
  tags: [mysql]

- name: Download RPM package
  ansible.builtin.shell: curl -O -L https://dev.mysql.com/get/mysql84-community-release-el9-1.noarch.rpm
  args:
    chdir: /usr/src
    creates: /usr/src/mysql84-community-release-el9-1.noarch.rpm
  tags: [mysql]

- name: Verify downloaded RPM package
  ansible.builtin.shell: rpm --checksig /usr/src/mysql84-community-release-el9-1.noarch.rpm
  register: mysql_rpm_signature
  failed_when: "'SIGNATURES NOT OK' in mysql_rpm_signature.stdout"
  tags: [mysql]

- name: Install MySQL RPM
  ansible.builtin.dnf:
    name: /usr/src/mysql84-community-release-el9-1.noarch.rpm
    state: present
  tags: [mysql]



# Install MySQL packages
#
- name: Install MySQL community server
  dnf:
    name: "mysql-community-server-{{ mysql_version }}"
    state: latest
    disablerepo: appstream
  notify: restart mysqld
  tags: [ mysql ]

- name: Get the list of upgradeable packages from MySQL
  dnf:
    list: upgrades
    disablerepo: appstream
  register: mysql_upgrade_list
  tags: [ mysql ]

- name: Update remaining MySQL packages to the latest versions
  dnf:
    name: "{{ mysql_upgrade_list.results | selectattr('name', 'match', '^mysql-community-') | map(attribute='name') | unique | list }}"
    state: latest
    update_only: yes
    disablerepo: appstream
  tags: [ mysql ]
