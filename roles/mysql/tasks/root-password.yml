# Make sure that python38-PyMySQL lib is installed. Ansible rely on this package for mysql connections
#
- name: Install python38-PyMySQL for Ansible
  dnf:
    name: [python38, python38-PyMySQL]
    state: latest
  tags: [mysql]



# Make sure that SSL certificates are present
#
- name: Generate MySQL certificate files
  shell:
    cmd: /usr/bin/mysql_ssl_rsa_setup --uid=mysql
    creates: /var/lib/mysql/server-cert.pem
  tags: [mysql]



# Create /root/.my.cnf config file with credentials to database
#
- name: Create .my.cnf with login credentials
  template:
    src: my.cnf.j2
    dest: "/root/.my.cnf"
    owner: root
    group: root
    mode: 0600
  tags: [mysql]



# Change root password if current root password is not valid
#
- name: Check if current MySQL root password is valid
  mysql_info:
    filter: version
  ignore_errors: yes
  register: mysql_root_password_test
  tags: [mysql]

- name: Create init file with new root password
  template:
    src: init-file.j2
    dest: /tmp/mysql-init-file
    owner: mysql
    group: mysql
    mode: 0644
  when: "mysql_root_password_test.failed"
  tags: [mysql]

- name: Stop MySQL server
  service:
    name: mysqld
    state: stopped
  when: "mysql_root_password_test.failed"
  tags: [mysql]

- name: Start MySQL server with init file
  shell: /usr/sbin/mysqld --init-file=/tmp/mysql-init-file  --user=mysql &
  when: "mysql_root_password_test.failed"
  tags: [mysql]

- name: Remove init file
  file:
    path: /tmp/mysql-init-file
    state: absent
  tags: [mysql]

- name: Kill server with init file
  shell: kill `ps aux | grep /usr/sbin/mysqld | grep -v grep | awk '{print $2}'`
  when: "mysql_root_password_test.failed"
  tags: [mysql]

- name: Start MySQL server
  service:
    name: mysqld
    state: started
  when: "mysql_root_password_test.failed"
  tags: [mysql]
