# Install required tools for compiling OpenSSL from source
#
- name: Install required tools for compiling OpenSSL
  dnf:
    name: [libtool, perl-core, zlib-devel]
    state: latest
  tags: [openssl]



# Download and unpack sources
# The source code will be downloaded from the OpenSSL website
# https://www.openssl.org/source/
#
- name: Download required source files
  get_url:
    dest: "{{ openssl_sources_location }}"
    url: "https://www.openssl.org/source/openssl-{{ openssl_version }}.tar.gz"
  tags: [openssl]

- name: Unpack downloaded OpenSSL sources
  unarchive:
    src: "{{ openssl_sources_location }}/openssl-{{ openssl_version }}.tar.gz"
    dest: "{{ openssl_sources_location }}"
    owner: "{{ openssl_build_user }}"
    group: "{{ openssl_build_group }}"
    copy: no
    creates: "{{ openssl_sources_location }}/openssl-{{ openssl_version }}"
  tags: [openssl]



# Compile and install OpenSSL. Create symbolic links for libraries.
# It will be compiled by using different user than root.
# Install operation  must be executed as sudo user
# Symbolic links for
#
- name: Compile OpenSSL
  command: "{{ item }}"
  args:
    chdir: "{{ openssl_sources_location }}/openssl-{{ openssl_version }}"
  with_items:
    - "./Configure --prefix={{ openssl_install_path }} --openssldir={{ openssl_install_path }}"
    - make
    - make test
  become: true
  become_user: "{{ openssl_build_user }}"
  tags: [openssl]

- name: Install compiled OpenSSL
  command: make install
  args:
    chdir: "{{ openssl_sources_location }}/openssl-{{ openssl_version }}"
  tags: [openssl]

- name: Create symbolic links for OpenSSL libraries
  file:
    src: "{{ openssl_install_path }}/lib64/{{ item }}"
    path: "/usr/lib64/{{ item }}"
    owner: root
    group: root
    state: link
  with_items:
    - libssl.so.3
    - libcrypto.so.3
  tags: [openssl]



# Remove downloaded sources after installation
#
- name: Cleanup downloaded sources
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ openssl_sources_location }}/openssl-{{ openssl_version }}.tar.gz"
    - "{{ openssl_sources_location }}/openssl-{{ openssl_version }}"
  tags: [openssl]



# Add new OpenSSL executables to PATH
# It will fix the issue when OpenSSL compiled from source can be overridden by OpenSSL installed with dnf
#
- name: Add OpenSSL executables to PATH
  template:
    src: openssl.sh.j2
    dest: /etc/profile.d/openssl.sh
    owner: root
    group: root
    mode: 0644
  tags: [openssl]
